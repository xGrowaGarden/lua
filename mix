-- ShinOp Hub Simulation GUI (1-Minute Loading Version)

-- Create the ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ShinOpHub"
screenGui.ResetOnSpawn = false
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- Create loading screen Frame
local loadingFrame = Instance.new("Frame")
loadingFrame.Size = UDim2.new(0.4,0,0.1,0)
loadingFrame.Position = UDim2.new(0.3,0,0.45,0)
loadingFrame.BackgroundColor3 = Color3.fromRGB(255, 182, 193)
loadingFrame.BorderSizePixel = 0
loadingFrame.Parent = screenGui

-- Loading Label
local loadingLabel = Instance.new("TextLabel")
loadingLabel.Size = UDim2.new(1,0,1,0)
loadingLabel.BackgroundTransparency = 1
loadingLabel.Text = "Loading... 0%"
loadingLabel.Font = Enum.Font.GothamBold
loadingLabel.TextScaled = true
loadingLabel.TextColor3 = Color3.fromRGB(0,0,0)
loadingLabel.Parent = loadingFrame

-- Simulate 1-minute loading (60 seconds total, 0.6 seconds per 1%)
for i = 0, 100 do
    loadingLabel.Text = "Loading... "..i.."%"
    wait(0.6)
end

loadingLabel.Text = "‚úÖ Loading Complete!"
wait(2)
loadingFrame:Destroy()

-- Create main hub frame
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0.3,0,0.5,0)
mainFrame.Position = UDim2.new(0.35,0,0.25,0)
mainFrame.BackgroundColor3 = Color3.fromRGB(255,192,203)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui

-- Title Label
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1,0,0.15,0)
title.BackgroundTransparency = 1
title.Text = "üå∏ ShinOp Hub üå∏"
title.Font = Enum.Font.GothamBold
title.TextScaled = true
title.TextColor3 = Color3.fromRGB(0,0,0)
title.Parent = mainFrame

-- Button definitions
local buttons = {
    {Text = "üåë Dark Spawner Rayfield"},
    {Text = "üé≤ Egg Randomizer"},
    {Text = "üß¨ Pet Mutation Finder"},
    {Text = "‚ùÑÔ∏è Trade Freeze"}
}

-- Create Buttons with logic
for i, info in ipairs(buttons) do
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0.9,0,0.15,0)
    btn.Position = UDim2.new(0.05,0,0.15 + (i-1)*0.2,0)
    btn.BackgroundColor3 = Color3.fromRGB(255, 105, 180)
    btn.Text = info.Text
    btn.Font = Enum.Font.Gotham
    btn.TextScaled = true
    btn.TextColor3 = Color3.fromRGB(255,255,255)
    btn.Parent = mainFrame

    -- Button functionality
    btn.MouseButton1Click:Connect(function()
        if info.Text == "üåë Dark Spawner Rayfield" then
            local part = Instance.new("Part")
            part.Size = Vector3.new(4,1,4)
            part.Position = Vector3.new(0,5,0)
            part.BrickColor = BrickColor.new("Really black")
            part.Anchored = true
            part.Parent = workspace
            print("Dark Spawner created.")

        elseif info.Text == "üé≤ Egg Randomizer" then
            local eggs = {"Red Egg","Blue Egg","Golden Egg"}
            local chosen = eggs[math.random(1,#eggs)]
            local msg = Instance.new("Message", workspace)
            msg.Text = "You received: "..chosen
            wait(2)
            msg:Destroy()

        elseif info.Text == "üß¨ Pet Mutation Finder" then
            local mutations = {"Speed Boost","Glow","Mini Size"}
            local mutation = mutations[math.random(1,#mutations)]
            local msg = Instance.new("Message", workspace)
            msg.Text = "Your pet mutation: "..mutation
            wait(2)
            msg:Destroy()

        elseif info.Text == "‚ùÑÔ∏è Trade Freeze" then
            local msg = Instance.new("Message", workspace)
            msg.Text = "‚ö†Ô∏è Trade has been frozen. Auto-accept enabled."
            wait(2)
            msg:Destroy()
        end
    end)
end

-- Minimize / Maximize Button
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0.4,0,0.1,0)
toggleButton.Position = UDim2.new(0.3,0,0.9,0)
toggleButton.BackgroundColor3 = Color3.fromRGB(255,105,180)
toggleButton.Text = "Minimize"
toggleButton.Font = Enum.Font.GothamBold
toggleButton.TextScaled = true
toggleButton.TextColor3 = Color3.fromRGB(255,255,255)
toggleButton.Parent = mainFrame

local minimized = false
toggleButton.MouseButton1Click:Connect(function()
    minimized = not minimized
    for _,child in pairs(mainFrame:GetChildren()) do
        if child:IsA("TextButton") and child ~= toggleButton then
            child.Visible = not minimized
        end
    end
    toggleButton.Text = minimized and "Maximize" or "Minimize"
end)
